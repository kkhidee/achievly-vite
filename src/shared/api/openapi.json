{
  "openapi": "3.0.0",
  "paths": {
    "/auth/check": {
      "get": {
        "operationId": "checkAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Проверка авторизации",
        "tags": [
          "Auth"
        ]
      }
    },
    "/goals": {
      "post": {
        "operationId": "createGoal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGoalBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoalDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Create goal",
        "tags": [
          "Goals"
        ]
      },
      "get": {
        "operationId": "getGoals",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GoalDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Get goals",
        "tags": [
          "Goals"
        ]
      }
    },
    "/goals/{id}": {
      "patch": {
        "operationId": "updateGoal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGoalBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Update goal",
        "tags": [
          "Goals"
        ]
      },
      "delete": {
        "operationId": "deleteGoal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Delete goal",
        "tags": [
          "Goals"
        ]
      }
    },
    "/events": {
      "post": {
        "operationId": "createEvent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Create event",
        "tags": [
          "Events"
        ]
      },
      "get": {
        "operationId": "getEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Get events",
        "tags": [
          "Events"
        ]
      }
    },
    "/events/{id}": {
      "patch": {
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Update event",
        "tags": [
          "Events"
        ]
      },
      "delete": {
        "operationId": "deleteEvent",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Delete event",
        "tags": [
          "Events"
        ]
      }
    },
    "/teams": {
      "post": {
        "operationId": "createTeam",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Create team",
        "tags": [
          "Teams"
        ]
      },
      "get": {
        "operationId": "getTeamsByUserId",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Get teams by user id",
        "tags": [
          "Teams"
        ]
      }
    },
    "/teams/{id}": {
      "get": {
        "operationId": "getTeamById",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Get team by id",
        "tags": [
          "Teams"
        ]
      }
    },
    "/teams/invite": {
      "post": {
        "operationId": "inviteUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Invite user to team",
        "tags": [
          "Teams"
        ]
      }
    },
    "/notifications": {
      "post": {
        "operationId": "createNotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "summary": "Create notification",
        "tags": [
          "Notifications"
        ]
      }
    }
  },
  "info": {
    "title": "Achievly API",
    "description": "Swagger API documentation for Achievly app",
    "version": "3.1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "TaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID задачи",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Заголовок задачи",
            "example": "Title"
          },
          "deadline_date": {
            "type": "string",
            "description": "Дата окончания задачи",
            "example": "2025-02-02T21:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Примечание задачи",
            "example": "Note"
          },
          "done_date": {
            "type": "string",
            "description": "Дата выполнения задачи",
            "example": "2025-02-02T21:00:00.000Z"
          }
        },
        "required": [
          "id",
          "title",
          "deadline_date",
          "note",
          "done_date"
        ]
      },
      "CreateGoalBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Заголовок цели",
            "example": "Goal title"
          },
          "category": {
            "type": "string",
            "description": "Категория цели",
            "example": "education"
          },
          "deadline_date": {
            "type": "string",
            "description": "Дата окончания цели",
            "example": "2025-02-02T21:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Примечание к цели",
            "example": "Note"
          },
          "tasks": {
            "description": "Задачи цели",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            }
          }
        },
        "required": [
          "title",
          "category"
        ]
      },
      "GoalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID цели",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Заголовок цели",
            "example": "Goal title"
          },
          "category": {
            "type": "string",
            "description": "Категория цели",
            "example": "education"
          },
          "status": {
            "type": "string",
            "description": "Статус цели",
            "example": "ongoing"
          },
          "deadline_date": {
            "type": "string",
            "description": "Дата окончания цели",
            "example": "2025-02-02T21:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Примечание к цели",
            "example": "Note"
          },
          "achieved_date": {
            "type": "string",
            "description": "Дата выполнения цели",
            "example": "2025-02-02T21:00:00.000Z"
          },
          "tasks": {
            "description": "Задачи цели",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            }
          }
        },
        "required": [
          "id",
          "title",
          "category",
          "status"
        ]
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "error": {
            "type": "string",
            "description": "Error type"
          },
          "statusCode": {
            "type": "number",
            "description": "Error status code"
          }
        },
        "required": [
          "message",
          "error",
          "statusCode"
        ]
      },
      "UpdateGoalBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Заголовок цели",
            "example": "Goal title"
          },
          "category": {
            "type": "string",
            "description": "Категория цели",
            "example": "education"
          },
          "status": {
            "type": "string",
            "description": "Статус цели",
            "example": "ongoing"
          },
          "deadline_date": {
            "type": "string",
            "description": "Дата окончания цели",
            "example": "2025-02-02T21:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Примечание к цели",
            "example": "Note"
          },
          "achieved_date": {
            "type": "string",
            "description": "Дата выполнения цели",
            "example": "2025-02-02T21:00:00.000Z"
          },
          "tasks": {
            "description": "Задачи цели",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            }
          }
        }
      },
      "UpdateResult": {
        "type": "object",
        "properties": {}
      },
      "CreateEventBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Заголовок события",
            "example": "Title event"
          },
          "start_timestamp": {
            "type": "number",
            "description": "Время начала события",
            "example": "Note"
          },
          "end_timestamp": {
            "type": "number",
            "description": "Время окончания события",
            "example": "Note"
          }
        },
        "required": [
          "title",
          "start_timestamp",
          "end_timestamp"
        ]
      },
      "EventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID события",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Заголовок события",
            "example": "Title event"
          },
          "start_timestamp": {
            "type": "number",
            "description": "Время начала события",
            "example": "Note"
          },
          "end_timestamp": {
            "type": "number",
            "description": "Время окончания события",
            "example": "Note"
          }
        },
        "required": [
          "id",
          "title",
          "start_timestamp",
          "end_timestamp"
        ]
      },
      "UpdateEventBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Заголовок события",
            "example": "Title event"
          },
          "start_timestamp": {
            "type": "number",
            "description": "Время начала события",
            "example": "Note"
          },
          "end_timestamp": {
            "type": "number",
            "description": "Время окончания события",
            "example": "Note"
          }
        },
        "required": [
          "title",
          "start_timestamp",
          "end_timestamp"
        ]
      },
      "CreateTeamBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование команды"
          }
        },
        "required": [
          "name"
        ]
      },
      "EventEntity": {
        "type": "object",
        "properties": {}
      },
      "GoalEntity": {
        "type": "object",
        "properties": {}
      },
      "NotificationEntity": {
        "type": "object",
        "properties": {}
      },
      "ProjectEntity": {
        "type": "object",
        "properties": {}
      },
      "TeamEntity": {
        "type": "object",
        "properties": {}
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID пользователя",
            "example": 1
          },
          "username": {
            "type": "string",
            "description": "Имя пользователя",
            "example": "Username"
          },
          "email": {
            "type": "string",
            "description": "Email пользователя",
            "example": "mail@mail.com"
          },
          "picture_url": {
            "type": "string",
            "description": "Изображение пользователя",
            "example": "https://picture.com"
          },
          "events": {
            "description": "События в календаре",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventEntity"
            }
          },
          "goals": {
            "description": "Цели пользователя",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoalEntity"
            }
          },
          "notifications": {
            "description": "Уведомления пользователя",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationEntity"
            }
          },
          "projects": {
            "description": "Проекты пользователя",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectEntity"
            }
          },
          "teams": {
            "description": "Команды пользователя",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamEntity"
            }
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "picture_url"
        ]
      },
      "TeamDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID команды"
          },
          "name": {
            "type": "string",
            "description": "Наименование команды"
          },
          "created_by": {
            "description": "Создатель команды",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "users": {
            "description": "Участники команды",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "created_by",
          "users"
        ]
      },
      "InviteUserBody": {
        "type": "object",
        "properties": {
          "user_invite_id": {
            "type": "string",
            "description": "ID приглашения пользователя"
          },
          "team_id": {
            "type": "number",
            "description": "ID команды"
          }
        },
        "required": [
          "user_invite_id",
          "team_id"
        ]
      },
      "CreateNotificationBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Заголовок уведомления"
          },
          "description": {
            "type": "string",
            "description": "Описание уведомления"
          },
          "accept": {
            "type": "string",
            "description": "Ссылка на принятие уведомления"
          },
          "reject": {
            "type": "string",
            "description": "Ссылка на отклонение уведомления"
          }
        },
        "required": [
          "title"
        ]
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID уведомления"
          },
          "title": {
            "type": "string",
            "description": "Заголовок уведомления"
          },
          "description": {
            "type": "string",
            "description": "Описание уведомления"
          },
          "accept": {
            "type": "string",
            "description": "Ссылка на принятие уведомления"
          },
          "reject": {
            "type": "string",
            "description": "Ссылка на отклонение уведомления"
          }
        },
        "required": [
          "id",
          "title"
        ]
      }
    }
  }
}